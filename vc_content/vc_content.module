<?php

/**
 * Implementation of hook_views_api().
 */
function vc_content_views_api() {     
  return array(         
    'api' => '3.0-alpha1',         
    'path' => drupal_get_path('module', 'vc_content') . '/views',     
  ); 
}

/**
 * Implementation of hook_menu()
 */ 
function vc_content_menu() {
  $items = array(); 
  $items['admin/config/system/campus_information'] = array(
    'title' => 'Campus site information',
    'description' => 'Campus site information admin page', 
    'page callback' => 'drupal_get_form',
    'page arguments' => array('vc_content_campus_info_form'),
    'access callback' => 'user_access',
    'access arguments' => array('administrator'),
    'type' => MENU_CALLBACK,
  );
  
  return $items;
}

/**
 * Implementation of hook_admin_paths()
 */
function vc_content_admin_paths() {
  $paths = array(
    'admin/config/system/campus_information' => TRUE,
  );
  
  return $paths;
}

/**
 * Form for Campus information admin page.
 */
function vc_content_campus_info_form($form, &$form_state) {
  $form['campus_settings'] = array(
    '#type' => 'fieldset',
    '#title' => t('Campus Settings'),
  );
  
  $form['campus_settings']['campus_type'] = array(
    '#type' => 'radios',
    '#title' => t('Choice campus type:'),
    '#default_value' => variable_get('campus_type', 'campus'),
    '#options' => array(
      'global' => t('Global site'),
      'campus' => t('Campus site'),
    ),
  );
  
  $form['campus_settings']['campus_information'] = array(
    '#type' => 'fieldset',
    '#title' => t('Campus site information'),
    '#states' => array(
      'visible' => array(
         ':input[name="campus_type"]' => array('value' => 'campus'),            
      )               
    ),
  );
  
  $form['campus_settings']['campus_information']['campus_name'] = array(
    '#type' => 'textfield',
    '#title' => t('Campus name'),
    '#default_value' => variable_get('campus_name', 'Campus'),
    '#required' => TRUE
  );
  
  $form['campus_settings']['campus_information']['campus_address'] = array(
    '#type' => 'textfield',
    '#title' => t('Campus address'),
    '#default_value' => variable_get('campus_address', ''),
  );
  
  $form['campus_settings']['campus_information']['campus_country'] = array(
  '#type' => 'textfield',
  '#title' => t('Campus Country'),
  '#default_value' => variable_get('campus_country', 'Australia'),
  '#required' => TRUE,
  );
  
  $form['campus_settings']['campus_information']['campus_services'] = array(
    '#type' => 'textfield',
    '#title' => t('Campus services'),
    '#default_value' => variable_get('campus_services', ''),
    '#description' => t('Campus services time. Example: 9:30 AM, 11:30 AM, 5:30 PM, 7:30 PM'),
  );
  
  return system_settings_form($form);
}

function vc_content_campus_info_form_submit($form, &$form_state) {
  $values = $form_state['values'];
  
  if ($values['campus_type'] == 'campus') {
    variable_set('campus_name', $values['campus_name']); 
    variable_set('campus_country', $values['campus_country']);
    if ($values['campus_address']) {
      variable_set('campus_address', $values['campus_address']);
    }
    if ($values['campus_services']) {
      variable_set('campus_services', $values['campus_services']); 
    }
  } else {
    variable_set('campus_name', 'GLOBAL');
    variable_set('campus_address', '');
    variable_set('campus_services', ''); 
  }  
}

/**
* Implements hook_entity_info_alter().
*/
function vc_content_entity_info_alter(&$entity_info) {
  $entity_info['node']['view modes']['custom_teaser'] = array(
    'label' => t('Custom Teaser'),
    'custom settings' => TRUE,
  );
}

/**
* Implements hook_preprocess_node().
*/
function vc_content_preprocess_node(&$vars) {
  $vars['custom_teaser'] = 0;
  if($vars['view_mode'] == 'custom_teaser') {
    $vars['custom_teaser'] = 1;
    $vars['custom_teaser_image'] = $vars['content']['field_custom_teaser_image'];
    unset($vars['content']['field_ministry_video']);
  }

  if ($vars['type'] == 'event' && $vars['field_event_date']['und'][0]['value'] != 1) {
    $vars['content']['field_date']['#access'] = FALSE;
  }
}

/**
* Implements hook_node_view().
*/
function vc_content_node_view($node, $view_mode, $langcode) {
  if ($node->type == 'event' && $view_mode == 'full') {
    menu_tree_set_path('main-menu', 'events');
  }
}

/**
* Implements hook_form_alter().
*/
function vc_content_form_alter(&$form, $form_state, $form_id)  {   
  if ($form_id == 'system_site_information_settings') {
    $form['campus_settings'] = array(
      '#type' => 'fieldset',
      '#title' => t('Campus Settings'),
    );
    
    $form['campus_settings']['campus_type'] = array(
      '#type' => 'radios',
      '#title' => t('Choice campus type:'),
      '#default_value' => variable_get('campus_type', 'campus'),
      '#options' => array(
        'global' => t('Global site'),
        'campus' => t('Campus site'),
      ),
    );
    
    $form['campus_settings']['campus_information'] = array(
      '#type' => 'fieldset',
      '#title' => t('Campus site information'),
      '#states' => array(
        'visible' => array(
           ':input[name="campus_type"]' => array('value' => 'campus'),            
        )
      ),
    );
    
    $form['campus_settings']['campus_information']['campus_name'] = array(
      '#type' => 'textfield',
      '#title' => t('Campus name'),
      '#default_value' => variable_get('campus_name', 'Global Influencer Church'),
      '#required' => TRUE
    );
    
    $form['campus_settings']['campus_information']['campus_address'] = array(
      '#type' => 'textfield',
      '#title' => t('Campus address'),
      '#default_value' => variable_get('campus_address', ''),
    );
    
    $form['campus_settings']['campus_information']['campus_country'] = array(
    '#type' => 'textfield',
    '#title' => t('Campus Country'),
    '#default_value' => variable_get('campus_country', 'Australia'),
    '#required' => TRUE,
    );
    
    $form['campus_settings']['campus_information']['campus_services'] = array(
      '#type' => 'textfield',
      '#title' => t('Campus services'),
      '#default_value' => variable_get('campus_services', ''),
      '#description' => t('Campus services time. Example: 9:30 AM, 11:30 AM, 5:30 PM, 7:30 PM'),
    );
    
    $form['#submit'][] = 'vc_content_campus_info_form_submit';
  }

  if ($form_id == 'event_node_form') {
    if (variable_get('campus_type', 'campus') == 'campus') {
      $form['field_is_global']['#access'] = FALSE;
    }
  }
}

/**
 * Implementation of hook_block_info().
 */
function vc_content_block_info() {
  $blocks['campus_address'] = array(
    'info' => t('Campus address Block at site header'),
  );
  $blocks['campus_services'] = array(
    'info' => t('Campus services Block at site header'),
  );
  
  $blocks['campus_team_page_title'] = array(
    'info' => t('Campus Team Page Header Block'),
  );
  
  $blocks['campus_event_page_title'] = array(
    'info' => t('Campus Event Page Header Block'),
  );
  
  $blocks['campus_ministry_page_title'] = array(
    'info' => t('Campus Ministry Page Header Block'),
  );
  
  $blocks['current_campus_menu'] = array(
    'info' => t('Current campus name Block'),
  );
  
  $blocks['current_active_main_menu'] = array(
    'info' => t('Current active Main menu Block'),
  );
   
  $blocks['current_active_copyright_menu'] = array(
    'info' => t('Current active Site copyright menu Block'),
  );
  
  $blocks['current_active_influencer_menu'] = array(
    'info' => t('Current active New influencer menu Block'),
  );
  
  $blocks['current_active_footer_menu'] = array(
    'info' => t('Current active Footer menu Block'),
  );
  
  return $blocks;
}
 
/**
 * Implementation of hook_block_view().
 */
function vc_content_block_view($delta='') {
  $block = array();
  switch ($delta) {
    case 'campus_address':
      $block['subject'] = t('Campus address Block');
      $block['content'] = vc_content_campus_address_contents();
      break;
    case 'campus_services':
      $block['subject'] = t('Campus services Block');
      $block['content'] = vc_content_campus_services_contents();
      break;
    case 'campus_team_page_title':
      $block['subject'] = t('Campus Team Page Title Block');
      $block['content'] = vc_content_current_campus_name_contents('team_page');
      break;
    case 'campus_event_page_title':
      $block['subject'] = t('Campus Event Page Title Block');
      $block['content'] = vc_content_current_campus_name_contents('event_page');
      break;
    case 'campus_ministry_page_title':
      $block['subject'] = t('Campus Ministry Page Title Block');
      $block['content'] = vc_content_current_campus_name_contents('ministry_page');
      break;
    case 'current_campus_menu':
      $block['subject'] = t('Current Campus Name Block');
      $block['content'] = vc_content_current_campus_name_contents('current_campus_menu');
      break;
    case 'current_active_main_menu':
      $block['subject'] = t('Current Active Main Menu Block');
      $menus = menu_tree('main-menu');
      $block['content'] = drupal_render(vc_content_get_current_active_menu_tree($menus));
      break;
    case 'current_active_copyright_menu':
      $block['subject'] = t('Current Active Site Copyright Menu Block');
      $menus = menu_tree('menu-site-copyright');
      $block['content'] = drupal_render(vc_content_get_current_active_menu_tree($menus));
      break;
    case 'current_active_influencer_menu':
      $block['subject'] = t('Current Active New Influencer Menu Block');
      $menus = menu_tree('menu-new-influencer');
      $block['content'] = drupal_render(vc_content_get_current_active_menu_tree($menus));
      break;
    case 'current_active_footer_menu':
      $block['subject'] = t('Current Active Footer Menu Block');
      $menus = menu_tree('menu-footer-menu');
      $block['content'] = drupal_render(vc_content_get_current_active_menu_tree($menus));
      break;
  }
  
  return $block;
}
 
/**
 * Campus address block html 
 */
function vc_content_campus_address_contents() {  
  $address = variable_get('campus_address', '');
  
  if ($address == '') {
    $address_content = '';
  } else {
    $address_content = '<div class="campus_address"><div class="title">Address</div><div class="address">'.$address.'</div></div>';
  }
  
  return $address_content; 
}

/**
 * Campus services block html 
 */
function vc_content_campus_services_contents() {  
  $services = variable_get('campus_services', '');
  
  if ($services == '') {
    $services_content = '';
  } else {
    $services = explode(",", $services);
    $services_time = theme('item_list', array('items' => $services, 'type' => 'ul', 'attributes' => array( 'class' => 'times')));
    $services_content = '<div class="campus_service_times"><div class="title">Service Times</div>'.$services_time.'</div>';
  }
  
  return $services_content; 
}

/**
 * Display current campus name
 */
function vc_content_current_campus_name_contents( $page = '') {  
  $campus_name = strtolower(variable_get('campus_name', 'Campus'));
  $content = '';
  switch ($page) {
    case 'team_page':
      $content = '<div class="campus_team_page_title"><h2>'.ucfirst($campus_name).' Leadership Team</h2></div>';
      break;
    case 'event_page':
      // if (variable_get('campus_type', 'global') != 'global') {
        $content = '<div class="campus_event_page_title">'.ucfirst($campus_name).' Events</div>';
      //}
      break;
    case 'ministry_page':
      $content = '<div class="campus_ministry_page_title">'.ucfirst($campus_name).' Church life</div>';
      break;
    case 'current_campus_menu':
      $content = '<div class="current_campus"><div class="title">Campus:</div><div class="campus_name">'.strtoupper($campus_name).'</div></div>';
      break;
  }
  
  return $content;
}

/**
 * Get current active menu of main-menu
 */
function vc_content_get_current_active_menu_tree($tree) {
  foreach ($tree as $menu) {
    if ($menu['#original_link']['in_active_trail']) {
      if ($menu['#below']) {
        
        $r = vc_content_get_current_active_menu_tree($menu['#below']);
        if ($r==0) {
          return $menu['#below']; 
        }
        else {
          return $r; 
        }
      }
      else {
        return $tree;
      }      
    }
  }
  
  return 0;
}

/**
 * Implementation of hook_user_update()
 */
function vc_content_user_update(&$edit, $account, $category) {
  if ($account->uid == 1 && variable_get('initial_features_export_setup', 0)) {
    // Revert all features
    features_revert();
    cache_clear_all();
    variable_set('initial_features_export_setup', 0);
  }
}

/**
 * Implements hook_file_default_displays().
 */
function vc_content_file_default_displays() {
  return array(
    'video__default__media_youtube_video' => (object) array(
      'api_version' => 1,
      'name'  => 'video__default__media_youtube_video',
      'status'  => TRUE,
      'weight'  => 0,
      'settings' => array(
        'width'   => 666,
        'height'  => 371,
      ),
    ),
    'video__default__media_youtube_image' => (object) array(
      'api_version' => 1,
      'name'  => 'video__default__media_youtube_image',
      'status'  => TRUE,
      'weight'  => 0,
      'settings' => array(
        'image_style' => 'video_preview',
      ),
    ),
  );
}
