<?php

/**
 * Implements hook_permission()
 */
function vc_admin_permission() {
  return array(
    'administer vietcoop dashboard' => array(
      'title' => t('Administer vietcoop dashboard'),
      'description' => t('Allows users complete control Vietcoop dashboard.'),
    ),
  );
}

/**
 * Implementation of hook_menu()
 */ 
function vc_admin_menu() {
  $items = array();
  
  $items['vc/dashboard'] = array(
    'title' => 'Dashboard',
    'description' => 'Site SEO admin page', 
    'page callback' => 'vc_admin_dashboard_form', 
    'access callback' => 'user_access',
    'access arguments' => array('administer vietcoop dashboard'),
    'type' => MENU_CALLBACK,
  );
  
//  $items['vc/contents'] = array(
//    'title' => 'Content',
//    'description' => 'Content admin page',        
//    'page callback' => 'vc_admin_content_form',
//    'access callback' => 'user_access',
//    'access arguments' => array('administer vietcoop dashboard'),
//    'type' => MENU_CALLBACK,
//  );
  
  $items['vc/contents'] = array(
    'title' => 'Content',
    'description' => 'Content admin page',        
    'page callback' => 'views_embed_view',
    'page arguments' => array('vc_content_pages_admin', 'block'),
    'access callback' => 'user_access',
    'access arguments' => array('administer vietcoop dashboard'),
    'type' => MENU_CALLBACK,
  );
  
  $items['vc/contents/pages'] = array(
    'title' => t('Pages'),
    'type' => MENU_DEFAULT_LOCAL_TASK, 
    'weight' => 1);
  
  $items['vc/contents/content_types'] = array(
    'title' => t('Content Types'), 
    'type' => MENU_LOCAL_TASK, 
    'access callback' => 'user_access',
    'access arguments' => array('administer vietcoop dashboard'), 
    'page callback' => 'vc_admin_content_types_form',
    'weight' => 2);
  
  $items['vc/site_settings'] = array(
    'title' => 'Site settings',
    'description' => 'Site settings admin page', 
    'page callback' => 'drupal_get_form',
    'page arguments' => array('vc_admin_site_settings_form'),
    'access callback' => 'user_access',
    'access arguments' => array('administer vietcoop dashboard'),
    'type' => MENU_CALLBACK,
  );
    
  return $items;
}

/**
 * Implementation of hook_admin_paths()
 */
function vc_admin_admin_paths() {
  $paths = array(
    'admin/vc/settings' => TRUE, 
  );
  return $paths;
}  

/**
 * Form for Site settings admin page.
 */
function vc_admin_site_settings_form($form, &$form_state) {
  $form['site_information'] = array(
    '#type' => 'fieldset',
    '#title' => t('Site details'),
  );
  
  $form['site_information']['site_name'] = array(
    '#type' => 'textfield',
    '#title' => t('Site name'),
    '#default_value' => variable_get('site_name', 'Influencers'),
    '#required' => TRUE
  );
  
  $form['site_information']['site_slogan'] = array(
    '#type' => 'textfield',
    '#title' => t('Slogan'),
    '#default_value' => variable_get('site_slogan', ''),
    '#description' => t("How this is used depends on your site's theme."),
  );
  
  $form['site_information']['site_mail'] = array(
    '#type' => 'textfield',
    '#title' => t('E-mail address'),
    '#default_value' => variable_get('site_mail', ini_get('sendmail_from')),
    '#description' => t("The <em>From</em> address in automated e-mails sent during registration and new password requests, and other notifications. (Use an address ending in your site's domain to help prevent this e-mail being flagged as spam.)"),
    '#required' => TRUE,
  );
  
  $form['campus_settings'] = array(
    '#type' => 'fieldset',
    '#title' => t('Setting your campus client website.'),
  );
  
  $form['campus_settings']['campus_type'] = array(
    '#type' => 'radios',
    '#title' => t('Choice campus type:'),
    '#default_value' => variable_get('campus_type', 'campus'),
    '#options' => array(
      'global' => t('Global site'),
      'campus' => t('Campus site'),
    ),
  );
  
  $form['campus_information'] = array(
    '#type' => 'fieldset',
    '#title' => t('Campus site information'),
    '#states' => array(
      'visible' => array(
         ':input[name="campus_type"]' => array('value' => 'campus'),            
      )               
    ),
  );
  
  $form['campus_information']['campus_name'] = array(
    '#type' => 'textfield',
    '#title' => t('Campus name'),
    '#default_value' => variable_get('campus_name', 'Campus'),
    '#required' => TRUE
  );
  
  $form['campus_information']['campus_address'] = array(
    '#type' => 'textfield',
    '#title' => t('Campus address'),
    '#default_value' => variable_get('campus_address', ''),
  );
  
  $form['campus_information']['campus_country'] = array(
    '#type' => 'textfield',
    '#title' => t('Campus Country'),
    '#default_value' => variable_get('campus_country', 'Australia'),
    '#required' => TRUE,
  );
  
  $form['campus_information']['campus_services'] = array(
    '#type' => 'textfield',
    '#title' => t('Campus services'),
    '#default_value' => variable_get('campus_services', ''),
    '#description' => t('Campus services time. Example: 9:30 AM, 11:30 AM, 5:30 PM, 7:30 PM'),
  );
  
  $form['ganalytics'] = array(
    '#type' => 'fieldset',
    '#title' => t('Google Analytics settings'),
  );

  $form['ganalytics']['googleanalytics_account'] = array(
    '#title' => t('Web Property ID'),
    '#type' => 'textfield',
    '#default_value' => variable_get('googleanalytics_account', 'UA-'),
    '#size' => 15,
    '#maxlength' => 20,
    '#required' => TRUE,
    '#description' => t('This ID is unique to each site you want to track separately, and is in the form of UA-xxxxxxx-yy. To get a Web Property ID, <a href="@analytics">register your site with Google Analytics</a>, or if you already have registered your site, go to your Google Analytics Settings page to see the ID next to every site profile. <a href="@webpropertyid">Find more information in the documentation</a>.', array('@analytics' => 'http://www.google.com/analytics/', '@webpropertyid' => url('https://developers.google.com/analytics/resources/concepts/gaConceptsAccounts', array('fragment' => 'webProperty')))),
  );
  
  $form['ganalytics']['google_analytics_report_link'] = array(
    '#type' => 'item',
    '#markup' => '<a href="/admin/config/system/google-analytics-reports?destination=vc/site_settings">Edit Google Analytics Reports Profiles</a>',
  );
  
  $form['vietcoop_dashboard_settings'] = array(
    '#type' => 'fieldset',
    '#title' => t('Dashboard Report Settings'),
  );
  
  $form['vietcoop_dashboard_settings']['vc_dashboard_facebook_fanpage_id'] = array(
    '#type' => 'textfield',
    '#title' => t('Facebook fanpage ID'),
    '#default_value' => variable_get('vc_dashboard_facebook_fanpage_id', "118549218197195"),
    '#description' => t("Facebook fanpage ID to display like count report. Ex: 118549218197195"),
    '#required' => TRUE
  );
  
  $form['vietcoop_dashboard_settings']['vc_dashboard_facebook_app_id'] = array(
    '#type' => 'textfield',
    '#title' => t('Facebook App ID'),
    '#default_value' => variable_get('vc_dashboard_facebook_app_id', '429990700387982'),
    '#description' => t("Facebook fanpage ID to display like count report. Ex: 429990700387982"),
    '#required' => TRUE
  );
  
  $form['vietcoop_dashboard_settings']['vc_dashboard_facebook_app_secret'] = array(
    '#type' => 'textfield',
    '#title' => t('Facebook App Secret'),
    '#default_value' => variable_get('vc_dashboard_facebook_app_secret', '4c30f8c53e55ef064372ea1dca40c8d9'),
    '#description' => t("Facebook fanpage ID to display like count report. Ex: '4c30f8c53e55ef064372ea1dca40c8d9'"),
    '#required' => TRUE
  );
  
  $form['vietcoop_dashboard_settings']['vc_dashboard_twitter_page_name'] = array(
    '#type' => 'textfield',
    '#title' => t('Twitter Page Name'),
    '#default_value' => variable_get('vc_dashboard_twitter_page_name', 'influencersfilm'),
    '#description' => t("Twitter Page Name to display follower count report. Ex: influencersfilm"),
  );
  
  $form['#submit'][] = 'vc_admin_site_settings_form_submit';
  
  return system_settings_form($form);
}

/**
 * Validates the submitted site-information form.
 */
function vc_admin_site_settings_form_validate($form, &$form_state) {
  // Validate the e-mail address.
  if ($error = user_validate_mail($form_state['values']['site_mail'])) {
    form_set_error('site_mail', $error);
  }
}

/**
 * Submition site-information form.
 */
function vc_admin_site_settings_form_submit($form, &$form_state) {
  $values = $form_state['values'];
  //kpr($values); exit;
  
  if ($values['campus_type']) {
    variable_set('campus_name', $values['campus_name']); 
    variable_set('campus_country', $values['campus_country']);
    if ($values['campus_address']) {
      variable_set('campus_address', $values['campus_address']);
    }
    if ($values['campus_services']) {
      variable_set('campus_services', $values['campus_services']); 
    }
  } else {
    variable_set('campus_name', 'GLOBAL');
  }  
}

/**
 * Form for SEO admin page.
 */
function vc_admin_dashboard_form() {
  if (!variable_get('google_analytics_reports_oauth_token', FALSE)) {
    drupal_set_message(t('You must <a href="!url">authorize</a> Drupal to use your Analytics account before you can view reports.', array('!url' => url('admin/config/system/google-analytics-reports'))), 'warning');
    return ' ';
  }

  module_load_include('inc', 'google_analytics_reports','google_analytics_reports.pages');
  $summary = array(
    'conversion' => _vc_admin_google_analytics_reports_conversion(),
    'loyalty' => _vc_admin_google_analytics_reports_loyalty(),
    'visit_chart' => _google_analytics_reports_visits(),
    'usage' => _google_analytics_reports_usage(),
    'pages' => _vc_admin_google_analytics_reports_top_pages(),
    'referrals' => _vc_admin_google_analytics_reports_top_referrals(),
    'keywords' => _vc_admin_google_analytics_reports_top_keywords(),
    'facebook'  => vc_admin_facebook_like_count(),
    'twitter' => vc_admin_twitter_follower_count(),
  );
  if (in_array(FALSE, $summary, TRUE)) {
    $menu_item = menu_get_item();
    if ($menu_item['href'] == 'admin/reports/google-analytics') {
      drupal_set_message(_google_analytics_reports_error_message(), 'error');
      return ' ';
    }
    else {

    }
    return '<p>' . _google_analytics_reports_error_message() . '</p>';
  }
  return theme('vc_admin_google_analytics_reports_summary', $summary);
}

/**
 * Renders an img element with a chart of the number of site goal conversion.
 */
function _vc_admin_google_analytics_reports_conversion() {
  $params = array(
    'metrics' => array('ga:goalConversionRateAll'),
    'start_date' => strtotime('-31 days'),
    'end_date' => strtotime('-1 day'),
  );
  $feed = google_analytics_api_report_data($params);  
  if ($feed->error) {
    return FALSE;
  }
  return $feed->totals;
}

/**
 * Renders an img element with a chart of the number of site visitor loyalty.
 */
function _vc_admin_google_analytics_reports_loyalty() {
  $params = array(
    'metrics' => array('ga:newVisits'),
    'start_date' => strtotime('-31 days'),
    'end_date' => strtotime('-1 day'),
  );
  $feed = google_analytics_api_report_data($params);
  if ($feed->error) {
    return FALSE;
  }
  return $feed->totals;
}

/**
 * Retrieves top pages.
 */
function _vc_admin_google_analytics_reports_top_pages() {
  $params = array(
    'metrics' => array('ga:pageviews'),
    'dimensions' => array('ga:pageTitle', 'ga:hostname', 'ga:pagePath'),
    'sort_metric' => array('-ga:pageviews'),
    'start_date' => strtotime('-31 days'),
    'end_date' => strtotime('-1 day'),
    'sort' => '-ga:pageviews',
    'max_results' => 4,
  );
  $feed = google_analytics_api_report_data($params);
  if ($feed->error) {
    return FALSE;
  }
  return $feed->results;
}

/**
 * Retrieves top referrals.
 */
function _vc_admin_google_analytics_reports_top_referrals($path = '') {
  $params = array(
    'metrics' => array('ga:visits'),
    'dimensions' => array('ga:source', 'ga:medium'),
    'sort_metric' => array('-ga:visits'),
    'filters' => 'ga:medium==referral',
    'start_date' => strtotime('-31 days'),
    'end_date' => strtotime('-1 day'),
    'max_results' => 4,
  );
  if ($path) {
    $params['filters'] .= ';' . _google_analytics_reports_path_filter($path);
  }
  $feed = google_analytics_api_report_data($params);
  if ($feed->error) {
    return FALSE;
  }
  return $feed->results;
}

/**
 * Retrieves top keywords.
 */
function _vc_admin_google_analytics_reports_top_keywords($path = '') {
  $params = array(
    'metrics' => array('ga:visits'),
    'dimensions' => array('ga:keyword'),
    'sort_metric' => array('-ga:visits'),
    'start_date' => strtotime('-31 days'),
    'end_date' => strtotime('-1 day'),
    'filters' => 'ga:keyword!=(not set)',
    'max_results' => 4,
  );
  if ($path) {
    $params['filters'] .= ';' . _google_analytics_reports_path_filter($path);
  }
  $feed = google_analytics_api_report_data($params);
  if ($feed->error) {
    return FALSE;
  }
  return $feed->results;
}

function vc_admin_facebook_like_count() {
  $request = drupal_http_request( 'https://graph.facebook.com/'.variable_get('vc_dashboard_facebook_fanpage_id', 118549218197195));
  $data = drupal_json_decode($request->data);
  if (isset($data['error']) && $data['error']) {
    drupal_set_message(t('Error: '.$data['error']['message']), 'error');
    return;
  } else {
    return $data['likes'];
  }
}

function vc_admin_twitter_follower_count() {
  $twitter_page_name = variable_get('vc_dashboard_twitter_page_name', 'influencersfilm');
  $data = json_decode(file_get_contents("https://api.twitter.com/1/users/lookup.json?screen_name={$twitter_page_name}"), true);
  return $data[0]['followers_count'];
}

/**
 * Form for Content admin page.
 */
function vc_admin_content_form() {
  $fieldable_panel_panes = db_select('fieldable_panels_panes', 'fpp')
    ->fields('fpp', array('title', 'fpid'))
    ->orderBy('title', 'asc')
    ->execute();    
  if ($fieldable_panel_panes) {
    foreach ($fieldable_panel_panes as $key => $pane) {
      $content_type_list[] = '<span>Page</span>'.l($pane->title, 'admin/structure/fieldable-panels-panes/view/'.$pane->fpid.'/edit', array('html' => TRUE, 'query' => array('destination' => 'vc/contents')));
    }
  }
  
  $types = node_type_get_types(); 
  unset($types['feed']);
  unset($types['feed_item']);
  unset($types['panel']);
  foreach ($types as $type) {
    $content_type_list[] = '<span>Content list</span>'.l($type->name, 'vc/contents/'.$type->type, array('html' => TRUE, 'query' => array('destination' => 'vc/contents')));
  }
  
  return theme('item_list', array('items' => $content_type_list, 'type' => 'ul', 'attributes' => array('class' => 'content_type_list')));
}

/**
 * Form for Content types admin page.
 */
function vc_admin_content_types_form() {
  drupal_set_title('Content');
  return views_embed_view('vc_content_nodetype_admin', 'block');
}

/**
 * Implements hook_theme().
 */
function vc_admin_theme() {
  return array(
    'vc_admin_google_analytics_reports_summary' => array(
      'variables' => array(
        'summary' => NULL
      ),  
      'template' => 'vc_admin_google_analytics_reports_summary',
      'file' => 'vc_admin_google_analytics_reports.theme.inc',
    ),
  );
}

/**
 * Implementation of hook_block_info().
 */
function vc_admin_block_info() {
  $blocks['dashboard_user_tool'] = array(
    'info' => t('Dashboard User tool Block'),
  );
  
  $blocks['dashboard_menu_tool'] = array(
    'info' => t('Dashboard Menu Block'),
  );
  return $blocks;
}
 
/**
 * Implementation of hook_block_view().
 */
function vc_admin_block_view($delta='') {
  $block = array();
  switch ($delta) {
    case 'dashboard_user_tool':
      $block['subject'] = t('Dashboard User tool Block');
      $block['content'] = vc_admin_dashboard_user_tool_contents();
      break;
    case 'dashboard_menu_tool':
      $block['subject'] = t('');
      $block['content'] = vc_admin_dashboard_menu_contents();
      break;
  }
  return $block;
}
 
/**
 * custom html block
 * @return string
 */
function vc_admin_dashboard_user_tool_contents() {  
  if (user_is_logged_in()) {
    global $user;
    return '<div class="welcome_text">Welcome, <a href=/user/'. $user->uid .'>'. $user->name . 
      '</a></div><div class="account_text"><a href="/vc/dashboard">Dashboard</a></div><div class="account_text"><a href=/user/'. $user->uid . 
      '/edit>Account Settings</a></div><div class="logout_text"><a href="/user/logout">Log out</a></div>';
  } else {
    return '';
  }
}

/**
 * custom html block
 * @return string
 */
function vc_admin_dashboard_menu_contents() {  
  $content_active = false;
  $current_path = current_path();
  $content_link = array('vc/contents/', 'node/', 'admin/structure/fieldable-panels-panes/view/');
  foreach ($content_link as $link) {
    if (!(strpos($current_path, $link) === false)){      
      $content_active = true;
      break;
    }
  }
  
  $content .= '<div class="menu-dashboard">';
  $content .= '<ul class="menu">';
  $content .= '<li class="first leaf">'.l(t('Dashboard'), 'vc/dashboard').'</li>';
  $content .= '<li class="leaf">'.l(t('Content'), 'vc/contents', array('attributes' => array('class' => array( $content_active ? 'active' : '')))).'</li>';
  $content .= '<li class="last leaf">'.l(t('Site settings'), 'vc/site_settings').'</li>';
  $content .= '</ul>';
  $content .= '</div>';
  return $content;
}

/**
* Implements hook_form_alter().
*/
function vc_admin_form_fieldable_panels_panes_entity_edit_form_alter(&$form, $form_state, $form_id)  {
  global $user;
  if (!in_array('administrator', $user->roles)) {
    $form['reusable']['#access'] = FALSE;
    $form['revision']['#access'] = FALSE;
  }
  $form['#submit'][] = 'vc_admin_fieldable_panel_pane_submit';
}

function vc_admin_fieldable_panel_pane_submit($form, &$form_state) {
  if ($page_title = $form_state['values']['field_page_title']['und'][0]['value']) {
    switch ($form_state['entity']->admin_title) {
      case 'About Ash & Jane Page Header':      
        variable_set('page_title_about', $page_title);
        break;
        
      case 'Be an Influencer Page Header':
        variable_set('page_title_be_an_influencer', $page_title);
        break;
        
      case 'College Page Header':
        variable_set('page_title_college', $page_title);
        break;
        
      case 'Concierge Page Header':
        variable_set('page_title_concierge_page', $page_title);
        break;
        
      case 'Contact Page Header':
        variable_set('page_title_contact_page', $page_title);
        break;
        
      case 'Devotions Online Page Header':
        variable_set('page_title_devotions_online', $page_title);
        break;
        
      case 'Disclaimer Page Header':
        variable_set('page_title_disclaimer', $page_title);
        break;
        
      case 'Events Page Header':
        variable_set('page_title_events_listing', $page_title);
        break;
        
      case 'Give Page Header':
        variable_set('page_title_give', $page_title);
        break;
        
      case 'Groups Page Header':
        variable_set('page_title_group_page', $page_title);
        break;
        
      case 'Highlights Page Header':
        variable_set('page_title_highlights_page', $page_title);
        break;
        
      case 'I\'m new Page Header':
        variable_set('page_title_im_new', $page_title);
        break;
        
      case 'Influencer Live Page Header':
        variable_set('page_title_influencers_live', $page_title);
        break;
        
      case 'Join a Group Page Header':
        variable_set('page_title_join_a_group_page', $page_title);
        break;
        
      case 'Location Page Header':
        variable_set('page_title_location', $page_title);
        break;
        
      case 'Ministry Page Header':
        variable_set('page_title_campus_church_life_page', $page_title);
        break;
        
      case 'Podcasts Page Header':
        variable_set('page_title_podcasts', $page_title);
        break;
        
      case 'Privacy Policy Page Header':
        variable_set('page_title_privacy_policy_page', $page_title);
        break;
        
      case 'Services Page Header':
        variable_set('page_title_services', $page_title);
        break;
        
      case 'Store Page Header':
        variable_set('page_title_store', $page_title);
        break;
        
      case 'Streaming Help Page Header':
        variable_set('page_title_streaming_help_page', $page_title);
        break;
        
      case 'Team Page Header':
        variable_set('page_title_team_page', $page_title);
        break;
        
      case 'Vision Page Header':
        variable_set('page_title_vision', $page_title);
        break;
    }
  }    
}

